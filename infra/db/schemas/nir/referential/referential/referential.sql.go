// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: referential.sql

package referential

import (
	"context"
)

const getResult = `-- name: GetResult :one
SELECT referential_id, "name", "label", image_path, params, company_id, user_audit_id
FROM nir.referential
LIMIT 1
`

func (q *Queries) GetResult(ctx context.Context) (NirReferential, error) {
	row := q.db.QueryRow(ctx, getResult)
	var i NirReferential
	err := row.Scan(
		&i.ReferentialID,
		&i.Name,
		&i.Label,
		&i.ImagePath,
		&i.Params,
		&i.CompanyID,
		&i.UserAuditID,
	)
	return i, err
}

const getResults = `-- name: GetResults :many
SELECT referential_id, "name", "label", image_path, params, company_id, user_audit_id
FROM nir.referential
`

func (q *Queries) GetResults(ctx context.Context) ([]NirReferential, error) {
	rows, err := q.db.Query(ctx, getResults)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	var items []NirReferential
	for rows.Next() {
		var i NirReferential
		if err := rows.Scan(
			&i.ReferentialID,
			&i.Name,
			&i.Label,
			&i.ImagePath,
			&i.Params,
			&i.CompanyID,
			&i.UserAuditID,
		); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}
